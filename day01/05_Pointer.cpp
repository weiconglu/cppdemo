#include<iostream>
using namespace std;

// 可以通过指针间接访问内存
int main05() {

	int a = 10;

	// 指针变量的定义及使得 &是取址符，指针里保存的是一个地址，地址指向的是变量的内容，可以使用*p来解引用取出地址指向的内容
	int* p = &a;
	cout << "指针p占用" << sizeof(p) << "个字节" << endl;
	cout << "p中保存的地址是 -> " << p << endl;
	cout << "p中保存的地址指向的内容是 -> " << *p << endl;

	cout << "a = " << a << endl;
	// 可以直接更改指针地址指向的内容来更改变量的值
	*p = 20;
	cout << "a = " << a << endl;

	// 空指针：指针变量指向编号为0的内存空间
	p = NULL;
	cout << "p中保存的地址是 -> " << p << endl;
	// 空指针指向的内容是不可以被访问的
	// cout << "p中保存的地址指向的内容是 -> " << *p << endl;
	p++; // 自增，加4个字节
	cout << "p中保存的地址是 -> " << p << endl;
	// 编号0~255为系统占用内存，不允许用户访问

	// ----------------野指针wild pointer--------------------
	p = (int*)0x0011;
	cout << "p中保存的地址指向的内容是 -> " << *p << endl;

	return 0;
}
